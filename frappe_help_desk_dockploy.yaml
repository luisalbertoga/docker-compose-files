services:
  mariadb:
    image: mariadb:10.8
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed # Temporary fix for MariaDB 10.6
    environment:
      MYSQL_ROOT_PASSWORD: 123
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - dokploy-network

  redis:
    image: redis:alpine
    networks:
      - dokploy-network

  frappe:
    image: frappe/bench:latest
    command:
      - bash
      - -lc
      - |
        set -eo pipefail
        # download to a container-writable location
        if [ ! -f /workspace/init.sh ]; then
          echo 'Downloading init.sh...'
          if command -v wget >/dev/null 2>&1; then
            wget -q -O /tmp/init.sh https://raw.githubusercontent.com/frappe/helpdesk/develop/docker/init.sh
          else
            curl -fsSL -o /tmp/init.sh https://raw.githubusercontent.com/frappe/helpdesk/develop/docker/init.sh
          fi
          # best-effort make it executable and try persisting to workspace (ignore errors)
          chmod +x /tmp/init.sh 2>/dev/null || true
          cp /tmp/init.sh /workspace/init.sh 2>/dev/null || true
        fi

        # Validate the file is present and not an HTML error page
        if [ -s /tmp/init.sh ]; then
          echo "/tmp/init.sh found; first lines:"
          head -n 5 /tmp/init.sh || true
          echo "Executing with bash..."
          bash /tmp/init.sh
        elif [ -s /workspace/init.sh ]; then
          echo "/workspace/init.sh found; first lines:"
          head -n 5 /workspace/init.sh || true
          echo "Executing with bash..."
          bash /workspace/init.sh
        else
          echo "Error: init.sh not found or empty"; exit 1
        fi
    environment:
      - SHELL=/bin/bash
    working_dir: /home/frappe
    volumes:
      - .:/workspace
    labels:
      - "traefik.enable=true"

      # Redirect HTTP -> HTTPS
      - "traefik.http.routers.helpdesk-web.rule=Host(`helpdesk.orthanc.fun`)"
      - "traefik.http.routers.helpdesk-web.entrypoints=web"
      - "traefik.http.routers.helpdesk-web.middlewares=helpdesk-redirect"
      - "traefik.http.middlewares.helpdesk-redirect.redirectscheme.scheme=https"

      # HTTPS router
      - "traefik.http.routers.helpdesk.rule=Host(`helpdesk.orthanc.fun`)"
      - "traefik.http.routers.helpdesk.entrypoints=websecure"
      - "traefik.http.routers.helpdesk.tls=true"
      - "traefik.http.routers.helpdesk.tls.certresolver=letsencrypt"
      - "traefik.http.routers.helpdesk.service=helpdesk"

      # Service configuration (adjust port if your app listens on a different internal port)
      - "traefik.http.services.helpdesk.loadbalancer.server.port=8000"
    networks:
      - dokploy-network

volumes:
  mariadb-data:

networks:
  dokploy-network:
    external: true
